washington_base <- ggplot(data = washington, mapping = aes(x = long, y = lat, group = group)) +
geom_polygon(fill = "palegreen", color = "black") +
coord_fixed(xlim = c(-123, -121), ylim = c(47,48), ratio = 1.3) +
theme_nothing() +
geom_polygon(data = wa_county, fill = NA, color = "white") +
geom_polygon(color = "black", fill = NA) +
geom_point(data = crime, mapping = aes(x = crime$Longitude, y = crime$Latitude),
color = "red", inherit.aes = FALSE) # +
# CHANGE WEATHER FILE NAME: geom_tile(aes(fill = weather_df)) +
# scale_fill_gradient(low = "darkgreen", high = "lightgreen")
server <- function(input, output) {
output$mapPlot <- renderPlot(washington_base)
output$plot <- renderPlotly({
# creates main 3d plot
plot_ly( crime,
x = crime$Crime.Subcategory, y = crime$Neighborhood, z = crime$Occurred.Date,
type = "scatter3d", mode="markers", text = crime$Primary.Offense.Description,
marker = list(
size = 10,
color = "rgba(63, 191, 191, .9)",
line = list(
color = "rgba(152, 0, 0, 1)",
width = 2
)
)
) %>% # creates title line
layout(
title = "Crime Data of Washington ",
yaxis = list(zeroline = FALSE),
xaxis = list(zeroline = FALSE)
)
})
# adds in hovering info
output$event <- renderPrint({
d <- event_data("plotly_hover")
if (is.null(d)) "Hover on a point to get info about it!" else d
})
}
# Setting up the pie charts:
# create a new data frame for the purpose of the pie charts
crime_pie <- crime
# delete the year from all dates
crime_pie$Occurred.Date <- substring(crime_pie$Occurred.Date, 1, 5)
# change dates to Date format (automatically changes all years to 2018)
crime_pie$Occurred.Date <- as.Date(crime_pie$Occurred.Date, format = "%m/%d")
slices <- c(crime_pie[crime_pie$Occurred.Date >= "2018-03-01" & crime_pie$Occurred.Date <= "2018-05-31",],
crime_pie[crime_pie$Occurred.Date >= "2018-06-01" & crime_pie$Occurred.Date <= "2018-09-01",],
crime_pie[crime_pie$Occurred.Date >= "2018-10-01" & crime_pie$Occurred.Date <= "2018-11-30",],
crime_pie[crime_pie$Occurred.Date >= "2018-12-01" & crime_pie$Occurred.Date <= "2018-02-28",])
lbls <- c("Spring, Summer, Autumn, Winter")
pct <- round(nrow(slices) / nrow(crime_pie) * 100)
slices <- c(crime_pie[crime_pie$Occurred.Date >= "2018-03-01" & crime_pie$Occurred.Date <= "2018-05-31",],
crime_pie[crime_pie$Occurred.Date >= "2018-06-01" & crime_pie$Occurred.Date <= "2018-09-01",],
crime_pie[crime_pie$Occurred.Date >= "2018-10-01" & crime_pie$Occurred.Date <= "2018-11-30",],
crime_pie[crime_pie$Occurred.Date >= "2018-12-01" & crime_pie$Occurred.Date <= "2018-02-28",])
View(slices)
View(crime_pie)
spring <- crime_pie[crime_pie$Occurred.Date >= "2018-03-01" & crime_pie$Occurred.Date <= "2018-05-31",]
summer <- crime_pie[crime_pie$Occurred.Date >= "2018-06-01" & crime_pie$Occurred.Date <= "2018-09-01",]
autumn <- crime_pie[crime_pie$Occurred.Date >= "2018-10-01" & crime_pie$Occurred.Date <= "2018-11-30",]
winter <- crime_pie[crime_pie$Occurred.Date >= "2018-12-01" & crime_pie$Occurred.Date <= "2018-02-28",]
View(winter)
library(shiny)
library(plotly)
library(dplyr)
library(lubridate)
library(ggplot2)
library(ggmap)
library(data.table)
library(ggrepel)
# library(rworldmap)
# library(rworldxtra)
library(maps)
library(mapdata)
source("process_data.R")
# View(crime)
states <- map_data("state")
washington <- subset(states, region == "washington")
counties <- map_data("county")
wa_county <- subset(counties, region == "washington")
washington_base <- ggplot(data = washington, mapping = aes(x = long, y = lat, group = group)) +
geom_polygon(fill = "palegreen", color = "black") +
coord_fixed(xlim = c(-123, -121), ylim = c(47,48), ratio = 1.3) +
theme_nothing() +
geom_polygon(data = wa_county, fill = NA, color = "white") +
geom_polygon(color = "black", fill = NA) +
geom_point(data = crime, mapping = aes(x = crime$Longitude, y = crime$Latitude),
color = "red", inherit.aes = FALSE) # +
# CHANGE WEATHER FILE NAME: geom_tile(aes(fill = weather_df)) +
# scale_fill_gradient(low = "darkgreen", high = "lightgreen")
server <- function(input, output) {
output$mapPlot <- renderPlot(washington_base)
output$plot <- renderPlotly({
# creates main 3d plot
plot_ly( crime,
x = crime$Crime.Subcategory, y = crime$Neighborhood, z = crime$Occurred.Date,
type = "scatter3d", mode="markers", text = crime$Primary.Offense.Description,
marker = list(
size = 10,
color = "rgba(63, 191, 191, .9)",
line = list(
color = "rgba(152, 0, 0, 1)",
width = 2
)
)
) %>% # creates title line
layout(
title = "Crime Data of Washington ",
yaxis = list(zeroline = FALSE),
xaxis = list(zeroline = FALSE)
)
})
# adds in hovering info
output$event <- renderPrint({
d <- event_data("plotly_hover")
if (is.null(d)) "Hover on a point to get info about it!" else d
})
}
# Setting up the pie charts:
# create a new data frame for the purpose of the pie charts
crime_pie <- crime
# delete the year from all dates
crime_pie$Occurred.Date <- substring(crime_pie$Occurred.Date, 1, 5)
# change dates to Date format (automatically changes all years to 2018)
crime_pie$Occurred.Date <- as.Date(crime_pie$Occurred.Date, format = "%m/%d")
spring <- crime_pie[crime_pie$Occurred.Date >= "2018-03-01" & crime_pie$Occurred.Date <= "2018-05-31",]
summer <- crime_pie[crime_pie$Occurred.Date >= "2018-06-01" & crime_pie$Occurred.Date <= "2018-09-01",]
autumn <- crime_pie[crime_pie$Occurred.Date >= "2018-10-01" & crime_pie$Occurred.Date <= "2018-11-30",]
winter <- crime_pie[crime_pie$Occurred.Date >= "2018-12-01" & crime_pie$Occurred.Date <= "2018-02-28",]
View(winter)
library(shiny)
library(plotly)
library(dplyr)
library(lubridate)
library(ggplot2)
library(ggmap)
library(data.table)
library(ggrepel)
# library(rworldmap)
# library(rworldxtra)
library(maps)
library(mapdata)
source("process_data.R")
# View(crime)
states <- map_data("state")
washington <- subset(states, region == "washington")
counties <- map_data("county")
wa_county <- subset(counties, region == "washington")
washington_base <- ggplot(data = washington, mapping = aes(x = long, y = lat, group = group)) +
geom_polygon(fill = "palegreen", color = "black") +
coord_fixed(xlim = c(-123, -121), ylim = c(47,48), ratio = 1.3) +
theme_nothing() +
geom_polygon(data = wa_county, fill = NA, color = "white") +
geom_polygon(color = "black", fill = NA) +
geom_point(data = crime, mapping = aes(x = crime$Longitude, y = crime$Latitude),
color = "red", inherit.aes = FALSE) # +
# CHANGE WEATHER FILE NAME: geom_tile(aes(fill = weather_df)) +
# scale_fill_gradient(low = "darkgreen", high = "lightgreen")
server <- function(input, output) {
output$mapPlot <- renderPlot(washington_base)
output$plot <- renderPlotly({
# creates main 3d plot
plot_ly( crime,
x = crime$Crime.Subcategory, y = crime$Neighborhood, z = crime$Occurred.Date,
type = "scatter3d", mode="markers", text = crime$Primary.Offense.Description,
marker = list(
size = 10,
color = "rgba(63, 191, 191, .9)",
line = list(
color = "rgba(152, 0, 0, 1)",
width = 2
)
)
) %>% # creates title line
layout(
title = "Crime Data of Washington ",
yaxis = list(zeroline = FALSE),
xaxis = list(zeroline = FALSE)
)
})
# adds in hovering info
output$event <- renderPrint({
d <- event_data("plotly_hover")
if (is.null(d)) "Hover on a point to get info about it!" else d
})
}
# Setting up the pie charts:
# create a new data frame for the purpose of the pie charts
crime_pie <- crime
# delete the year from all dates
crime_pie$Occurred.Date <- substring(crime_pie$Occurred.Date, 1, 5)
# change dates to Date format (automatically changes all years to 2018)
crime_pie$Occurred.Date <- as.Date(crime_pie$Occurred.Date, format = "%m/%d")
spring <- crime_pie[crime_pie$Occurred.Date >= "2018-03-01" & crime_pie$Occurred.Date <= "2018-05-31",]
View(spring)
summer <- crime_pie[crime_pie$Occurred.Date >= "2018-06-01" & crime_pie$Occurred.Date <= "2018-09-01",]
autumn <- crime_pie[crime_pie$Occurred.Date >= "2018-10-01" & crime_pie$Occurred.Date <= "2018-11-30",]
winter <- crime_pie[crime_pie$Occurred.Date >= "2018-12-01" & crime_pie$Occurred.Date <= "2018-02-28",]
View(winter)
View(summer)
View(autumn)
winter <- crime_pie[crime_pie$Occurred.Date >= "2018-12-01" | crime_pie$Occurred.Date <= "2018-02-28",]
View(spring)
unique(spring$Crime.Subcategory)
unique(spring$Primary.Offense.Description)
unique(spring$Crime.Subcategory)
unique <- unique(spring$Crime.Subcategory)
unique
spring_slices <- (length(unique(spring$Crime.Subcategory)))
?aggregate
?aggragate
?aggregate
spring_slices <- aggregate(spring, by = spring$Crime.Subcategory, FUN = NROW)
spring_slices <- aggregate(spring, by = list(spring$Crime.Subcategory), FUN = NROW)
View(spring_slices)
sum(spring_slices$Report.Number)
nrow(spring)
make_slice <- function(df) {
paste0(df, "_slices") <- aggregate(df, by = list(df$Crime.Subcategory), FUN = NROW)
}
make_slices <- function(df) {
paste0(df, "_slices") <- aggregate(df, by = list(df$Crime.Subcategory), FUN = NROW)
}
make_slices(spring)
spring_slices <- make_slices(spring)
make_slices <- function(df) {
aggregate(df, by = list(df$Crime.Subcategory), FUN = NROW)
}
spring_slices <- make_slices(spring)
View(spring_slices)
sum(spring_slices$Report.Number)
make_slices <- function(df) {
df <- aggregate(df, by = list(df$Crime.Subcategory), FUN = NROW)
list(df$Neighborhood)
}
spring_slices <- make_slices(spring)
View(spring_slices)
spring_slices <- make_slices(spring)
summer_slices <- make_slices(summer)
autumn_slices <- make_slices(spring)
winter_slices <- make_slices(winter)
pct <- round(sum(spring_slices)) / nrow(crime_pie) * 100)
pct <- round(sum(spring_slices)) / nrow(crime_pie) * 100
df <- aggregate(df, by = list(df$Crime.Subcategory), FUN = NROW)
library(shiny)
library(plotly)
library(dplyr)
library(lubridate)
library(ggplot2)
library(ggmap)
library(data.table)
library(ggrepel)
# library(rworldmap)
# library(rworldxtra)
library(maps)
library(mapdata)
source("process_data.R")
# View(crime)
states <- map_data("state")
washington <- subset(states, region == "washington")
counties <- map_data("county")
wa_county <- subset(counties, region == "washington")
washington_base <- ggplot(data = washington, mapping = aes(x = long, y = lat, group = group)) +
geom_polygon(fill = "palegreen", color = "black") +
coord_fixed(xlim = c(-123, -121), ylim = c(47,48), ratio = 1.3) +
theme_nothing() +
geom_polygon(data = wa_county, fill = NA, color = "white") +
geom_polygon(color = "black", fill = NA) +
geom_point(data = crime, mapping = aes(x = crime$Longitude, y = crime$Latitude),
color = "red", inherit.aes = FALSE) # +
# CHANGE WEATHER FILE NAME: geom_tile(aes(fill = weather_df)) +
# scale_fill_gradient(low = "darkgreen", high = "lightgreen")
server <- function(input, output) {
output$mapPlot <- renderPlot(washington_base)
output$plot <- renderPlotly({
# creates main 3d plot
plot_ly( crime,
x = crime$Crime.Subcategory, y = crime$Neighborhood, z = crime$Occurred.Date,
type = "scatter3d", mode="markers", text = crime$Primary.Offense.Description,
marker = list(
size = 10,
color = "rgba(63, 191, 191, .9)",
line = list(
color = "rgba(152, 0, 0, 1)",
width = 2
)
)
) %>% # creates title line
layout(
title = "Crime Data of Washington ",
yaxis = list(zeroline = FALSE),
xaxis = list(zeroline = FALSE)
)
})
# adds in hovering info
output$event <- renderPrint({
d <- event_data("plotly_hover")
if (is.null(d)) "Hover on a point to get info about it!" else d
})
}
# Setting up the pie charts:
# create a new data frame for the purpose of the pie charts
crime_pie <- crime
# delete the year from all dates
crime_pie$Occurred.Date <- substring(crime_pie$Occurred.Date, 1, 5)
# change dates to Date format (automatically changes all years to 2018)
crime_pie$Occurred.Date <- as.Date(crime_pie$Occurred.Date, format = "%m/%d")
# separate data by season
spring <- crime_pie[crime_pie$Occurred.Date >= "2018-03-01" & crime_pie$Occurred.Date <= "2018-05-31",]
summer <- crime_pie[crime_pie$Occurred.Date >= "2018-06-01" & crime_pie$Occurred.Date <= "2018-09-01",]
autumn <- crime_pie[crime_pie$Occurred.Date >= "2018-10-01" & crime_pie$Occurred.Date <= "2018-11-30",]
winter <- crime_pie[crime_pie$Occurred.Date >= "2018-12-01" | crime_pie$Occurred.Date <= "2018-02-28",]
View(spring)
# create reusable function to make list of slice values for each season
make_slices <- function(df) {
df <- aggregate(df, by = list(df$Crime.Subcategory), FUN = NROW)
avector <- df[,3]
}
spring_slices <- make_slices(spring)
summer_slices <- make_slices(summer)
autumn_slices <- make_slices(spring)
winter_slices <- make_slices(winter)
labels <- unique(crime_pie$Crime.Subcategory)
# create reusable function to make list of slice values for each season
make_slices <- function(df) {
df <- aggregate(df, by = list(df$Crime.Subcategory), FUN = NROW)
vector <- df[,3]
}
spring_slices <- make_slices(spring)
summer_slices <- make_slices(summer)
autumn_slices <- make_slices(spring)
winter_slices <- make_slices(winter)
labels <- unique(crime_pie$Crime.Subcategory)
spring_slices <- make_slices(spring)
summer_slices <- make_slices(summer)
autumn_slices <- make_slices(spring)
winter_slices <- make_slices(winter)
labels <- unique(crime_pie$Crime.Subcategory)
percentages <- round(spring_slices / sum(spring_slices) * 100)
lbls <- paste(labels, percentages) # add percents to labels
lbls <- paste(labels, "%", sep="") # add % to labels
pie(slices, labels = labels, col = rainbow(length(labels)),
main="Spring Pie Chart")
percentages <- abs(round(spring_slices / sum(spring_slices) * 100))
lbls <- paste(labels, percentages) # add percents to labels
lbls <- paste(labels, "%", sep="") # add % to labels
pie(slices, labels = labels, col = rainbow(length(labels)),
main="Spring Pie Chart")
percentages <- round(spring_slices / sum(spring_slices) * 100)
lbls <- paste(labels, percentages) # add percents to labels
lbls <- paste(labels, "%", sep="") # add % to labels
pie(slices, labels = labels, col = rainbow(length(labels)),
main="Spring Pie Chart")
?pie
pie(spring_slices, labels = labels, col = rainbow(length(labels)),
main="Spring Pie Chart")
pie(spring_slices, labels = labels, col = rainbow(length(labels)),
main="Spring Pie Chart", cex = 1)
pie(spring_slices, labels = labels, col = rainbow(length(labels)),
main="Spring Crimes Pie Chart", cex.lab = 1)
pie(spring_slices, labels = labels, col = rainbow(length(labels)),
main="Spring Crimes Pie Chart", cex.lab = 5)
?pie
pie(spring_slices, labels = labels, col = rainbow(length(labels)),
main="Spring Crimes Pie Chart", cex.lab = 1)
labels
spring_slices <- make_slices(spring)
spring_slices
indexes_to_remove <- labels[<100]
indexes_to_remove <- labels[labels<100]
# remove labels for small categories to make pie chart more readable
labels <- unique(crime_pie$Crime.Subcategory)
# remove labels for small categories to make pie chart more readable
labels <- unique(crime_pie$Crime.Subcategory)
labels
spring_slices <- make_slices(spring)
indexes_to_remove <- spring_slices[spring_slices < 100]
spring_slices <- make_slices(spring)
indexes_to_remove <- spring_slices[spring_slices < 100]
percentages <- round(spring_slices / sum(spring_slices) * 100)
labels <- paste(labels, percentages) # add percents to labels
labels <- paste(labels, "%", sep="") # add % to labels
pie(spring_slices, labels = labels, col = rainbow(length(labels)),
main="Spring Crimes Pie Chart")
percentages <- round(spring_slices / sum(spring_slices) * 100)
#labels <- paste(labels, percentages) # add percents to labels
#labels <- paste(labels, "%", sep="") # add % to labels
pie(spring_slices, labels = labels, col = rainbow(length(labels)),
main="Spring Crimes Pie Chart")
# remove labels for small categories to make pie chart more readable
labels <- unique(crime_pie$Crime.Subcategory)
#labels <- paste(labels, percentages) # add percents to labels
#labels <- paste(labels, "%", sep="") # add % to labels
pie(spring_slices, labels = labels, col = rainbow(length(labels)),
main="Spring Crimes Pie Chart")
spring_slices <- make_slices(spring)
summer_slices <- make_slices(summer)
autumn_slices <- make_slices(spring)
winter_slices <- make_slices(winter)
# remove labels for small categories to make pie chart more readable
labels <- unique(crime_pie$Crime.Subcategory)
# remove labels for small categories to make pie chart more readable
labels <- unique(crime_pie$Crime.Subcategory)
nchar
?nchar
indexes_to_remove <- spring_slices[nchar(spring_slices) < 100]
indexes_to_remove <- spring_slices[nchar(spring_slices) < 3]
# remove labels for categories with less than 3-digit counts,
# to make pie chart more readable
indexes_to_remove <- labels[nchar(spring_slices) < 3]
labels <- as.vector(unique(crime_pie$Crime.Subcategory))
# remove labels for categories with less than 3-digit counts,
# to make pie chart more readable
indexes_to_remove <- labels[nchar(spring_slices) < 3]
spring_slices <- make_slices(spring)
summer_slices <- make_slices(summer)
autumn_slices <- make_slices(spring)
winter_slices <- make_slices(winter)
labels <- as.vector(unique(crime_pie$Crime.Subcategory))
# only keep labels for categories with more than 3-digit counts,
# to make pie chart more readable
labels <- labels[nchar(spring_slices) > 3]
labels <- as.vector(unique(crime_pie$Crime.Subcategory))
labels[nchar(spring_slices) > 3] = NA
percentages <- round(spring_slices / sum(spring_slices) * 100)
# UN-COMMENT THESE TO ADD PERCENTAGES TO ALL LABELS:
#   labels <- paste(labels, percentages) # add percents to labels
#   labels <- paste(labels, "%", sep="") # add % to labels
pie(spring_slices, labels = labels, col = rainbow(length(labels)),
main="Spring Crimes Pie Chart")
labels <- as.vector(unique(crime_pie$Crime.Subcategory))
# remove  labels for categories with less than 3-digit counts,
# to make pie chart more readable
labels[nchar(spring_slices) < 3] = NA
percentages <- round(spring_slices / sum(spring_slices) * 100)
# UN-COMMENT THESE TO ADD PERCENTAGES TO ALL LABELS:
#   labels <- paste(labels, percentages) # add percents to labels
#   labels <- paste(labels, "%", sep="") # add % to labels
pie(spring_slices, labels = labels, col = rainbow(length(labels)),
main="Spring Crimes Pie Chart")
# remove  labels for categories with less than 3-digit counts,
# to make pie chart more readable
labels[nchar(spring_slices) < 4] = NA
percentages <- round(spring_slices / sum(spring_slices) * 100)
# UN-COMMENT THESE TO ADD PERCENTAGES TO ALL LABELS:
#   labels <- paste(labels, percentages) # add percents to labels
#   labels <- paste(labels, "%", sep="") # add % to labels
pie(spring_slices, labels = labels, col = rainbow(length(labels)),
main="Spring Crimes Pie Chart")
# UN-COMMENT THESE TO ADD PERCENTAGES TO ALL LABELS:
#   labels <- paste(labels, percentages) # add percents to labels
#   labels <- paste(labels, "%", sep="") # add % to labels
pie(spring_slices, labels = labels, col = rainbow(length(labels)),
main="Spring Crimes Pie Chart", cex = 1)
states <- map_data("state")
washington <- subset(states, region == "washington")
counties <- map_data("county")
wa_county <- subset(counties, region == "washington")
washington_base <- ggplot(data = washington, mapping = aes(x = long, y = lat, group = group)) +
geom_polygon(fill = "palegreen", color = "black") +
coord_fixed(xlim = c(-123, -121), ylim = c(47,48), ratio = 1.3) +
theme_nothing() +
geom_polygon(data = wa_county, fill = NA, color = "white") +
geom_polygon(color = "black", fill = NA) +
geom_point(data = crime, mapping = aes(x = crime$Longitude, y = crime$Latitude),
color = "red", inherit.aes = FALSE) # +
# CHANGE WEATHER FILE NAME: geom_tile(aes(fill = weather_df)) +
# scale_fill_gradient(low = "darkgreen", high = "lightgreen")
washington_base
washington_base <- ggplot(data = washington, mapping = aes(x = long, y = lat, group = group)) +
geom_polygon(fill = "palegreen", color = "black") +
coord_fixed(xlim = c(-123, -121), ylim = c(47,48), ratio = 1.3) +
theme_nothing() +
geom_polygon(data = wa_county, fill = NA, color = "white") +
geom_polygon(color = "black", fill = NA) +
geom_point(data = crime, mapping = aes(x = crime$Longitude, y = crime$Latitude),
color = "red", inherit.aes = FALSE) +
geom_tile(aes(fill = weather)) +
scale_fill_gradient(low = "darkgreen", high = "lightgreen")
washington_base
source("process_data.R")
washington_base <- ggplot(data = washington, mapping = aes(x = long, y = lat, group = group)) +
geom_polygon(fill = "palegreen", color = "black") +
coord_fixed(xlim = c(-123, -121), ylim = c(47,48), ratio = 1.3) +
theme_nothing() +
geom_polygon(data = wa_county, fill = NA, color = "white") +
geom_polygon(color = "black", fill = NA) +
geom_point(data = crime, mapping = aes(x = crime$Longitude, y = crime$Latitude),
color = "red", inherit.aes = FALSE) +
geom_tile(aes(fill = weather)) +
scale_fill_gradient(low = "darkgreen", high = "lightgreen")
washington_base
# UN-COMMENT THESE TO ADD PERCENTAGES TO ALL LABELS:
#   labels <- paste(labels, percentages) # add percents to labels
#   labels <- paste(labels, "%", sep="") # add % to labels
pie(spring_slices, labels = labels, col = rainbow(length(labels)),
main="Spring Crimes Pie Chart", cex = 1)
# C7.1
# a
ec_level <- c(1.6, 3.8, 6, 10.2)
ec_levels <- c(1.6, 1.6, 1.6, 1.6, 1.6, 3.8, 3.8, 3.8, 3.8, 6, 6, 6, 6, 10.2, 10.2, 10.2, 10.2, 10.2)
tomato1.6 <- c(59.5, 53.3, 56.8, 63.1, 58.7)
tomato3.8 <- c(55.2, 59.1, 52.8, 54.5)
tomato6 <- c(51.7, 48.8, 53.9, 49)
tomato10.2 <- c(60.6, 58.5, 55, 65.2, 61.3)
tomato_means <- c(mean(tomato1.6), mean(tomato3.8), mean(tomato6), mean(tomato10.2))
anova(lm(ec_level~tomato_means))
tomatoes(c(tomato1.6, tomato3.8, tomato6, tomato10.2))
ec_levels <- c(1.6, 1.6, 1.6, 1.6, 1.6, 3.8, 3.8, 3.8, 3.8, 6, 6, 6, 6, 10.2, 10.2, 10.2, 10.2, 10.2)
tomatoes <- (c(tomato1.6, tomato3.8, tomato6, tomato10.2))
lm(ec_levels ~ tomatoes)
summary(lm(ec_levels ~ tomatoes))
